t=s1$t
mle = mle_dd(n,E,t)
B[h,1] = mle$lambda
B[h,2] = mle$beta
B[h,3] = mle$mu
lb[[h]] = data.frame(lam=mle$setoflambda,bet=mle$setofbeta)
}
proc.time() - ptm
int=NULL
slo=NULL
for (i in 1:it){
lbd = lb[[i]]
int[i] = lm(lbd[lbd$lam>0.4,])$coef[1]
slo[i] = lm(lbd[lbd$lam>0.4,])$coef[2]
}
ggplot(NULL, aes(x=B[,1])) + geom_histogram()+geom_vline(xintercept=0.8)+xlab(paste(expression(lambda),"0"))
ggplot(NULL, aes(x=B[,2])) + geom_histogram()+geom_vline(xintercept=0.0175)+xlab(paste(expression(beta),"0"))
ggplot(NULL, aes(x=B[,3])) + geom_histogram()+geom_vline(xintercept=0.1)+xlab(paste(expression(mu),"0"))
ggplot(NULL, aes(x=BBB[BBB[,4]<70,4])) + geom_histogram()+geom_vline(xintercept=40)+xlab(paste(expression(K),""))
plot(B[,1],B[,2])
plot(B[,2],B[,3])
BBBB=data.frame(B)
summary(B[,1])
summary(B[,2])
summary(B[,3])
B = data.frame(B)
B[,4] = (B[,3]-B[,1])/(-B[,2])
summary(B)
stargazer(B)
xyplot(X2 ~ X1, data = BBBB)
B = data.frame(B)
B[,4] = (B[,3]-B[,1])/(-B[,2])
summary(B)
ptm <- proc.time()
set.seed(1)
it = 100
B = matrix(ncol=3,nrow=it)
lb = list()
for (h in 1:it){
s1 = phyl(tt=15, mu0=0.4,printEv=TRUE)
n = s1$n
p = length(n)
E = s1$E
t=s1$t
mle = mle_dd(n,E,t)
B[h,1] = mle$lambda
B[h,2] = mle$beta
B[h,3] = mle$mu
lb[[h]] = data.frame(lam=mle$setoflambda,bet=mle$setofbeta)
}
proc.time() - ptm
int=NULL
slo=NULL
for (i in 1:it){
lbd = lb[[i]]
int[i] = lm(lbd[lbd$lam>0.4,])$coef[1]
slo[i] = lm(lbd[lbd$lam>0.4,])$coef[2]
}
B = data.frame(B)
B[,4] = (B[,3]-B[,1])/(-B[,2])
summary(B)
library(parallel)
library(foreach)
library(doParallel)
ptm <- proc.time()
u01 <- dd_par(tt=15,mu=0.1,it=10)
proc.time() - ptm
int=NULL
slo=NULL
lambda=NULL
beta=NULL
mu=NULL
for (i in 1:100){
u=u01[[i]]
slo[i] = lm(u$setofbeta ~ u$setofbeta)$coef[2]
int[i] = lm(u$setofbeta ~ u$setofbeta)$coef[1]
lambda[i] = u$lambda
beta[i] = u$beta
mu[i] = u$mu
}
for (i in 1:10){
u=u01[[i]]
slo[i] = lm(u$setofbeta ~ u$setofbeta)$coef[2]
int[i] = lm(u$setofbeta ~ u$setofbeta)$coef[1]
lambda[i] = u$lambda
beta[i] = u$beta
mu[i] = u$mu
}
summary(lambda)
u01 <- dd_par(tt=15,mu=0.1,it=10)
dd_par <- function(tt=15,mu=0.1,it=10){
foreach(h = 1:it,
.combine = list,
.multicombine = TRUE) %dopar% {
s1 = phyl(tt=tt, mu0=mu,printEv=FALSE)
n = s1$n
E = s1$E
t=s1$t
mle = mle_dd(n,E,t)
mle
}
}
ptm <- proc.time()
u01 <- dd_par(tt=15,mu=0.1,it=100)
proc.time() - ptm
ptm <- proc.time()
it = 100
B = matrix(ncol=3,nrow=it)
lb = list()
N=NULL
for (h in 1:it){
s1 = phyl(tt=5, mu0=0.1,printEv=F)
n = s1$n
if (length(n)<5){
while(length(n)<5){
s1 = phyl(tt=5, mu0=0.1,printEv=F)
n = s1$n
}
}
E = s1$E
t=s1$t
N[h] = n
mle = mle_dd(n,E,t)
B[h,1] = mle$lambda
B[h,2] = mle$beta
B[h,3] = mle$mu
lb[[h]] = data.frame(lam=mle$setoflambda,bet=mle$setofbeta)
}
proc.time() - ptm
llik
library(P1)
llik
library("P1", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
ptm <- proc.time()
it = 100
B = matrix(ncol=3,nrow=it)
lb = list()
N=NULL
for (h in 1:it){
s1 = phyl(tt=5, mu0=0.1,printEv=F)
n = s1$n
if (length(n)<5){
while(length(n)<5){
s1 = phyl(tt=5, mu0=0.1,printEv=F)
n = s1$n
}
}
E = s1$E
t=s1$t
N[h] = n
mle = mle_dd(n,E,t)
B[h,1] = mle$lambda
B[h,2] = mle$beta
B[h,3] = mle$mu
lb[[h]] = data.frame(lam=mle$setoflambda,bet=mle$setofbeta)
}
proc.time() - ptm
int=NULL
slo=NULL
for (i in 1:it){
lbd = lb[[i]]
int[i] = lm(lbd[lbd$lam>0.6,])$coef[1]
slo[i] = lm(lbd[lbd$lam>0.6,])$coef[2]
}
su=summary(B)
B = data.frame(B)
B[,4] = (B[,3]-B[,1])/(-B[,2])
su=matrix((sapply(B,quantile,c(0.25,0.5,0.75))),nrow=1)
beta_percent = su[,4:6]
View(t(append(su[,1:3],su[,7:12])))
summary(int)
summary(slo)
u=0.918 #Parameter between 0 and 1
depth <- 9
angle<-30 #Between branches division
L <- 0.90 #Decreasing rate of branches by depth
nstars <- 300 #Number of stars to draw
mstars <- matrix(runif(2*nstars), ncol=2)
branches <- rbind(c(1,0,0,abs(jitter(0)),1,jitter(5, amount = 5)), data.frame())
colnames(branches) <- c("depth", "x1", "y1", "x2", "y2", "inertia")
for(i in 1:depth)
{
df <- branches[branches$depth==i,]
for(j in 1:nrow(df))
{
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]+angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]+angle)/180), df[j,6]+angle+jitter(10, amount = 8)))
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]-angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]-angle)/180), df[j,6]-angle+jitter(10, amount = 8)))
}
}
nodes <- rbind(as.matrix(branches[,2:3]), as.matrix(branches[,4:5]))
png("image.png", width = 1200, height = 600)
plot.new()
par(mai = rep(0, 4), bg = "gray12")
plot(nodes, type="n", xlim=c(-7, 3), ylim=c(0, 5))
for (i in 1:nrow(mstars))
{
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue4", cex=.7, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue",  cex=.3, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "white", cex=.1, pch=16)
}
# The moon
points(x=-5, y=3.5, cex=40, pch=16, col="lightyellow")
# The tree
for (i in 1:nrow(branches)) {lines(x=branches[i,c(2,4)], y=branches[i,c(3,5)], col = paste("gray", as.character(sample(seq(from=50, to=round(50+5*branches[i,1]), by=1), 1)), sep = ""), lwd=(65/(1+3*branches[i,1])))}
rm(branches)
dev.off()
plot(nodes, type="n", xlim=c(-7, 3), ylim=c(0, 5))
for (i in 1:nrow(mstars))
{
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue4", cex=.7, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue",  cex=.3, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "white", cex=.1, pch=16)
}
points(x=-5, y=3.5, cex=40, pch=16, col="lightyellow")
for (i in 1:nrow(branches)) {lines(x=branches[i,c(2,4)], y=branches[i,c(3,5)], col = paste("gray", as.character(sample(seq(from=50, to=round(50+5*branches[i,1]), by=1), 1)), sep = ""), lwd=(65/(1+3*branches[i,1])))}
{lines(x=branches[i,c(2,4)], y=branches[i,c(3,5)], col = paste("gray", as.character(sample(seq(from=50, to=round(50+5*branches[i,1]), by=1), 1)), sep = ""), lwd=(65/(1+3*branches[i,1])))}
branches
for(i in 1:depth)
{
df <- branches[branches$depth==i,]
for(j in 1:nrow(df))
{
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]+angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]+angle)/180), df[j,6]+angle+jitter(10, amount = 8)))
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]-angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]-angle)/180), df[j,6]-angle+jitter(10, amount = 8)))
}
}
branches <- rbind(c(1,0,0,abs(jitter(0)),1,jitter(5, amount = 5)), data.frame())
colnames(branches) <- c("depth", "x1", "y1", "x2", "y2", "inertia")
for(i in 1:depth)
{
df <- branches[branches$depth==i,]
for(j in 1:nrow(df))
{
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]+angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]+angle)/180), df[j,6]+angle+jitter(10, amount = 8)))
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]-angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]-angle)/180), df[j,6]-angle+jitter(10, amount = 8)))
}
}
for (i in 1:nrow(branches)) {lines(x=branches[i,c(2,4)], y=branches[i,c(3,5)], col = paste("gray", as.character(sample(seq(from=50, to=round(50+5*branches[i,1]), by=1), 1)), sep = ""), lwd=(65/(1+3*branches[i,1])))}
points(x=-5, y=3.5, cex=40, pch=16, col="blue")
points(x=-5, y=3.5, cex=40, pch=16, col="purple")
points(x=-5, y=3.5, cex=30, pch=16, col="purple")
points(x=-5, y=3.5, cex=30, pch=8, col="purple")
u=0.918 #Parameter between 0 and 1
depth <- 9
angle<-30 #Between branches division
L <- 0.90 #Decreasing rate of branches by depth
nstars <- 300 #Number of stars to draw
mstars <- matrix(runif(2*nstars), ncol=2)
branches <- rbind(c(1,0,0,abs(jitter(0)),1,jitter(5, amount = 5)), data.frame())
colnames(branches) <- c("depth", "x1", "y1", "x2", "y2", "inertia")
for(i in 1:depth)
{
df <- branches[branches$depth==i,]
for(j in 1:nrow(df))
{
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]+angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]+angle)/180), df[j,6]+angle+jitter(10, amount = 8)))
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]-angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]-angle)/180), df[j,6]-angle+jitter(10, amount = 8)))
}
}
nodes <- rbind(as.matrix(branches[,2:3]), as.matrix(branches[,4:5]))
png("image.png", width = 1200, height = 600)
plot.new()
par(mai = rep(0, 4), bg = "gray12")
plot(nodes, type="n", xlim=c(-7, 3), ylim=c(0, 5))
for (i in 1:nrow(mstars))
{
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue4", cex=.7, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue",  cex=.3, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "white", cex=.1, pch=16)
}
# The moon
points(x=-5, y=3.5, cex=30, pch=16, col="purple")
# The tree
for (i in 1:nrow(branches)) {lines(x=branches[i,c(2,4)], y=branches[i,c(3,5)], col = paste("gray", as.character(sample(seq(from=50, to=round(50+5*branches[i,1]), by=1), 1)), sep = ""), lwd=(65/(1+3*branches[i,1])))}
rm(branches)
dev.off()
u=0.918 #Parameter between 0 and 1
depth <- 9
angle<-30 #Between branches division
L <- 0.90 #Decreasing rate of branches by depth
nstars <- 300 #Number of stars to draw
mstars <- matrix(runif(2*nstars), ncol=2)
branches <- rbind(c(1,0,0,abs(jitter(0)),1,jitter(5, amount = 5)), data.frame())
colnames(branches) <- c("depth", "x1", "y1", "x2", "y2", "inertia")
for(i in 1:depth)
{
df <- branches[branches$depth==i,]
for(j in 1:nrow(df))
{
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]+angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]+angle)/180), df[j,6]+angle+jitter(10, amount = 8)))
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]-angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]-angle)/180), df[j,6]-angle+jitter(10, amount = 8)))
}
}
nodes <- rbind(as.matrix(branches[,2:3]), as.matrix(branches[,4:5]))
png("image.png", width = 1200, height = 600)
plot.new()
par(mai = rep(0, 4), bg = "gray12")
plot(nodes, type="n", xlim=c(-7, 3), ylim=c(0, 5))
for (i in 1:nrow(mstars))
{
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue4", cex=.7, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue",  cex=.3, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "white", cex=.1, pch=16)
}
# The moon
points(x=-5, y=3.5, cex=30, pch=16, col="purple")
# The tree
for (i in 1:nrow(branches)) {lines(x=branches[i,c(2,4)], y=branches[i,c(3,5)], col = paste("gray", as.character(sample(seq(from=50, to=round(50+5*branches[i,1]), by=1), 1)), sep = ""), lwd=(65/(1+3*branches[i,1])))}
rm(branches)
dev.off()
u=0.918 #Parameter between 0 and 1
depth <- 9
angle<-30 #Between branches division
L <- 0.90 #Decreasing rate of branches by depth
nstars <- 300 #Number of stars to draw
mstars <- matrix(runif(2*nstars), ncol=2)
branches <- rbind(c(1,0,0,abs(jitter(0)),1,jitter(5, amount = 5)), data.frame())
colnames(branches) <- c("depth", "x1", "y1", "x2", "y2", "inertia")
for(i in 1:depth)
{
df <- branches[branches$depth==i,]
for(j in 1:nrow(df))
{
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]+angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]+angle)/180), df[j,6]+angle+jitter(10, amount = 8)))
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]-angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]-angle)/180), df[j,6]-angle+jitter(10, amount = 8)))
}
}
nodes <- rbind(as.matrix(branches[,2:3]), as.matrix(branches[,4:5]))
png("image.png", width = 1200, height = 600)
plot.new()
par(mai = rep(0, 4), bg = "gray12")
plot(nodes, type="n", xlim=c(-7, 3), ylim=c(0, 5))
for (i in 1:nrow(mstars))
{
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue4", cex=.7, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue",  cex=.3, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "white", cex=.1, pch=16)
}
# The moon
points(x=-5, y=3.5, cex=30, pch=16, col="purple")
# The tree
for (i in 1:nrow(branches)) {lines(x=branches[i,c(2,4)], y=branches[i,c(3,5)], col = paste("gray", as.character(sample(seq(from=50, to=round(50+5*branches[i,1]), by=1), 1)), sep = ""), lwd=(65/(1+3*branches[i,1])))}
rm(branches)
dev.off()
u=0.918 #Parameter between 0 and 1
depth <- 9
angle<-30 #Between branches division
L <- 0.90 #Decreasing rate of branches by depth
nstars <- 300 #Number of stars to draw
mstars <- matrix(runif(2*nstars), ncol=2)
branches <- rbind(c(1,0,0,abs(jitter(0)),1,jitter(5, amount = 5)), data.frame())
colnames(branches) <- c("depth", "x1", "y1", "x2", "y2", "inertia")
for(i in 1:depth)
{
df <- branches[branches$depth==i,]
for(j in 1:nrow(df))
{
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]+angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]+angle)/180), df[j,6]+angle+jitter(10, amount = 8)))
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]-angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]-angle)/180), df[j,6]-angle+jitter(10, amount = 8)))
}
}
nodes <- rbind(as.matrix(branches[,2:3]), as.matrix(branches[,4:5]))
png("image.png", width = 1200, height = 600)
plot.new()
par(mai = rep(0, 4), bg = "gray12")
plot(nodes, type="n", xlim=c(-7, 3), ylim=c(0, 5))
dev.off()
u=0.918 #Parameter between 0 and 1
depth <- 9
angle<-30 #Between branches division
L <- 0.90 #Decreasing rate of branches by depth
nstars <- 300 #Number of stars to draw
mstars <- matrix(runif(2*nstars), ncol=2)
branches <- rbind(c(1,0,0,abs(jitter(0)),1,jitter(5, amount = 5)), data.frame())
colnames(branches) <- c("depth", "x1", "y1", "x2", "y2", "inertia")
for(i in 1:depth)
{
df <- branches[branches$depth==i,]
for(j in 1:nrow(df))
{
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]+angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]+angle)/180), df[j,6]+angle+jitter(10, amount = 8)))
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]-angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]-angle)/180), df[j,6]-angle+jitter(10, amount = 8)))
}
}
nodes <- rbind(as.matrix(branches[,2:3]), as.matrix(branches[,4:5]))
png("image.png", width = 1200, height = 600)
#plot.new()
par(mai = rep(0, 4), bg = "gray12")
plot(nodes, type="n", xlim=c(-7, 3), ylim=c(0, 5))
for (i in 1:nrow(mstars))
{
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue4", cex=.7, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue",  cex=.3, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "white", cex=.1, pch=16)
}
# The moon
points(x=-5, y=3.5, cex=30, pch=16, col="purple")
# The tree
for (i in 1:nrow(branches)) {lines(x=branches[i,c(2,4)], y=branches[i,c(3,5)], col = paste("gray", as.character(sample(seq(from=50, to=round(50+5*branches[i,1]), by=1), 1)), sep = ""), lwd=(65/(1+3*branches[i,1])))}
rm(branches)
#dev.off()
u=0.918 #Parameter between 0 and 1
depth <- 9
angle<-30 #Between branches division
L <- 0.90 #Decreasing rate of branches by depth
nstars <- 300 #Number of stars to draw
mstars <- matrix(runif(2*nstars), ncol=2)
branches <- rbind(c(1,0,0,abs(jitter(0)),1,jitter(5, amount = 5)), data.frame())
colnames(branches) <- c("depth", "x1", "y1", "x2", "y2", "inertia")
for(i in 1:depth)
{
df <- branches[branches$depth==i,]
for(j in 1:nrow(df))
{
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]+angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]+angle)/180), df[j,6]+angle+jitter(10, amount = 8)))
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]-angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]-angle)/180), df[j,6]-angle+jitter(10, amount = 8)))
}
}
nodes <- rbind(as.matrix(branches[,2:3]), as.matrix(branches[,4:5]))
png("image.png", width = 1200, height = 600)
plot(nodes, type="n", xlim=c(-7, 3), ylim=c(0, 5))
u=0.918 #Parameter between 0 and 1
depth <- 9
angle<-30 #Between branches division
L <- 0.90 #Decreasing rate of branches by depth
nstars <- 300 #Number of stars to draw
mstars <- matrix(runif(2*nstars), ncol=2)
branches <- rbind(c(1,0,0,abs(jitter(0)),1,jitter(5, amount = 5)), data.frame())
colnames(branches) <- c("depth", "x1", "y1", "x2", "y2", "inertia")
for(i in 1:depth)
{
df <- branches[branches$depth==i,]
for(j in 1:nrow(df))
{
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]+angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]+angle)/180), df[j,6]+angle+jitter(10, amount = 8)))
branches <- rbind(branches, c(df[j,1]+1, df[j,4], df[j,5], df[j,4]+L^(2*i+1)*sin(pi*(df[j,6]-angle)/180), df[j,5]+L^(2*i+1)*cos(pi*(df[j,6]-angle)/180), df[j,6]-angle+jitter(10, amount = 8)))
}
}
nodes <- rbind(as.matrix(branches[,2:3]), as.matrix(branches[,4:5]))
png("image.png", width = 1200, height = 600)
#plot.new()
par(mai = rep(0, 4), bg = "gray12")
plot(nodes, type="n", xlim=c(-7, 3), ylim=c(0, 5))
for (i in 1:nrow(mstars))
{
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue4", cex=.7, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "blue",  cex=.3, pch=16)
points(x=10*mstars[i,1]-7, y=5*mstars[i,2], col = "white", cex=.1, pch=16)
}
# The moon
points(x=-5, y=3.5, cex=30, pch=16, col="purple")
# The tree
for (i in 1:nrow(branches)) {lines(x=branches[i,c(2,4)], y=branches[i,c(3,5)], col = paste("gray", as.character(sample(seq(from=50, to=round(50+5*branches[i,1]), by=1), 1)), sep = ""), lwd=(65/(1+3*branches[i,1])))}
rm(branches)
#dev.off()
data(td)
library(ggplot2)
data(td)
install.packages("ggthemes")
library("ggthemes")
Cars93
data("mtcars")
Cars93
mtcars
data(Cars93, package = 'MASS')
colnames(Cars93)
plot(Cars93$Manufacturer)
plot(Cars93$Model)
plot(Cars93$Type)
plot(Cars93$Min.Price)
plot(Cars93$MPG.city)
plot(Cars93$MPG.city,Cars93$Weight)
plot(Cars93$MPG.city~Cars93$Weight)
p = ggplot(data=Cars93,aes(x=MPG.city,y=Weight))
plot(p)
plot(p+geom_point())
plot(p+geom_point(color=Origin))
plot(p+geom_point(aes(color=Origin)))
a=1
rm(list=ls())
rec1 = '((B:1,A:1):1,(F:1,C:1.5):0.5);'
rec1 = read.tree(text = rec1)
plot(rec1,show.tip.label = F)
library(ape)
rec1 = '((B:1,A:1):1,(F:1,C:1.5):0.5);'
rec1 = read.tree(text = rec1)
plot(rec1,show.tip.label = F)
plot(rec1,show.tip.label = F,edge.color = c("black","black","black","black","darkgreen","black"),edge.width = 2,edge.lty = c(rep(1,4),4,1))
plot(rec1,show.tip.label = F,edge.color = c("black","black","black","black","darkgreen","black"),edge.width = 2,edge.lty = c(rep(1,4),4,1))
shiny::runApp('Documents/Code/shiny_test/test')
shiny::runApp('Dropbox/Code/Project1/P1v2/shiny5')
runApp('Dropbox/Code/Project1/P1v2/shiny5')
shiny::runApp('Dropbox/Code/Project1/P1v2/Phylogenetic trees  vizualization tool')
library(devtools)
library(dmea)
s=sim_phyl()
plot(s$newick,root.edge = T)
s$br
s2 = drop.fossil(s$newick)
plot(s2)
plot(s2,use.edge.length = T)
plot(s2,root.edge = T)
s2=phylo2p(s2)
cumsum(s2$t)
cumsum(s$t)
?drop.fossil
library(dmea)
?drop.fossil
drop.fossil
library(dmea)
setwd("~/Dropbox/Reports/Images/importancesampling")
library(dmea)
